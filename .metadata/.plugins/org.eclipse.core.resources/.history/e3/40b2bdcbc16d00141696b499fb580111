package trb1914.pdfmerger;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JToolBar;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.apache.pdfbox.util.PDFMergerUtility;
/**
 * Nothing but a shell for PDFMergerUtility from PDFBox (apache) 
 * @author Mees Gelein
 */
public class PDFMerger extends JFrame{

	//STATIC STRINGS
	public static final String APP_TITLE = "PDF Merger";
	public static final String APP_VERSION = "0.0.1";
	public static final String LABEL_ADD_NEW = "Add new PDF file";
	public static final String LABEL_MERGE = "Merge PDF files";
	//ICONS
	public static ImageIcon APP_ICON;
	public static ImageIcon ICON_ARROW_UP;
	public static ImageIcon ICON_ARROW_DOWN;
	public static ImageIcon ICON_TICK;
	public static ImageIcon ICON_PLUS;
	public static ImageIcon ICON_DELETE;
	
	//GUI Components
	private JButton plusButton;
	private JButton mergeButton;
	private JButton deleteButton;
	private JButton upButton;
	private JButton downButton;
	private static JList<PDFEntry> fileList;
	
	//DATA HOLDERS
	public static Vector<PDFEntry> pdfFiles = new Vector<PDFEntry>();
	
	/**
	 * The class that actually merges the pdf files. This whole app is only a shell for this class :P
	 */
	public static PDFMergerUtility pdfMergerUtility = new PDFMergerUtility();
	
	/**
	 * Program entry
	 * @param args
	 */
	public static void main(String[] args){
		try{
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}catch(Exception e){
			System.out.println("[PDFMerger]: Couldn't set LF to system default. Using cross platform LF.");
		}
		SwingUtilities.invokeLater(new Runnable(){
			public void run(){
				PDFMerger mainFrame = new PDFMerger();
				mainFrame.setTitle(PDFMerger.APP_TITLE + " " + PDFMerger.APP_VERSION);
				mainFrame.setIconImage(APP_ICON.getImage());
				mainFrame.setVisible(true);
				mainFrame.setLocationRelativeTo(null);
				mainFrame.setResizable(false);
				mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			}
		});
	}
	
	/**
	 * Instantiation of the main application window
	 */
	public PDFMerger(){
		getImages();
		makeGUI();
	}
	
	/**
	 * Builds the GUI (who'd've thought?)
	 */
	private void makeGUI(){
		setLayout(new BorderLayout());
		JPanel contentPanel = new JPanel(new BorderLayout());
		contentPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
		add(contentPanel);
		
		JPanel topPanel = new JPanel(new GridLayout(1,2));
		Border border1 = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.LIGHT_GRAY);
		Border border2 = BorderFactory.createEmptyBorder(4, 4, 4, 4);
		topPanel.setBorder(new CompoundBorder(border1, border2));
		contentPanel.add(topPanel, BorderLayout.NORTH);
		
		CustomListener generalListener = new CustomListener();
		
		JPanel centerPanel = new JPanel(new BorderLayout());
		centerPanel.setBorder(topPanel.getBorder());
		contentPanel.add(centerPanel);
		
		plusButton = new JButton(ICON_PLUS);
		plusButton.setText(PDFMerger.LABEL_ADD_NEW);
		plusButton.addActionListener(generalListener);
		topPanel.add(plusButton);
		
		mergeButton = new JButton(ICON_TICK);
		mergeButton.setText(PDFMerger.LABEL_MERGE);
		mergeButton.addActionListener(generalListener);
		topPanel.add(mergeButton);
		
		fileList = new JList<PDFEntry>();
		JScrollPane scrollPanel = new JScrollPane(fileList);
		scrollPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		centerPanel.add(scrollPanel);
		fileList.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
		
		JToolBar buttonBar = new JToolBar(JToolBar.VERTICAL);
		buttonBar.setFloatable(false);
		centerPanel.add(buttonBar, BorderLayout.EAST);
		
		upButton = new JButton(PDFMerger.ICON_ARROW_UP);
		upButton.addActionListener(generalListener);
		downButton = new JButton(PDFMerger.ICON_ARROW_DOWN);
		downButton.addActionListener(generalListener);
		deleteButton = new JButton(PDFMerger.ICON_DELETE);
		buttonBar.add(upButton);
		buttonBar.add(downButton);
		buttonBar.addSeparator();
		buttonBar.add(deleteButton);
		
		//to set the correct width and height
		pack();
	}
	
	/**
	 * registers all the images to the Registry
	 */
	private void getImages(){
		APP_ICON = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/trb1914/pdfmerger/plus_64.png")));
		ICON_PLUS = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/trb1914/pdfmerger/plus_64.png")));
		ICON_TICK = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/trb1914/pdfmerger/tick_64.png")));
		ICON_ARROW_UP = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/trb1914/pdfmerger/up_16.png")));
		ICON_ARROW_DOWN = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/trb1914/pdfmerger/down_16.png")));
		ICON_DELETE = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/trb1914/pdfmerger/delete_16.png")));
	}
	/**
	 * A tiny class that holds a file url. Used for display in the JList
	 * @author Mees Gelein
	 */
	private class PDFEntry{
		
		private File file;
		public PDFEntry(File f){
			file = f;
		}
		/**
		 * Used for display in the JList
		 */
		public String toString(){
			return file.getAbsolutePath();
		}
	}
	/**
	 * Private class to have all the button handling in one place. When the button has been
	 * pressed the actionPerformed e.source will determine who set it off and toggle to the
	 * correct behaviour accordingly 
	 * @author Mees Gelein
	 */
	private class CustomListener implements ActionListener{
		
		private FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF File","pdf");
		
		public void actionPerformed(ActionEvent e){
			Object src = e.getSource();
			if(src.equals(plusButton)){
				doPlus();
			}else if(src.equals(mergeButton)){
				
			}else if(src.equals(downButton)){
				
			}else if(src.equals(upButton)){
				
			}else if(src.equals(deleteButton)){
				doDelete();
			}else{
				System.out.println("[CustomListener]: Source was not recognized.. no action taken");
			}
		}
		/**
		 * Called when the plusButton is pressed
		 */
		private void doPlus(){
			JFileChooser fileChooser = new JFileChooser();
			fileChooser.setFileFilter(filter);
			int reply = fileChooser.showOpenDialog(null);
			if(reply != JFileChooser.CANCEL_OPTION){
				PDFEntry newEntry = new PDFEntry(fileChooser.getSelectedFile());
				PDFMerger.pdfFiles.add(newEntry);
				fileList.setListData(pdfFiles);
			}
		}
		/**
		 * Called when the deleteButton is pressed
		 */
		private void doDelete(){
			
		}
	}
}
