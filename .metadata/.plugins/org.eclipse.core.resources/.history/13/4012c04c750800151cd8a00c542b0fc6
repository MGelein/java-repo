package trb1914.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import trb1914.helper.SystemHelper;

public class OnScreenKeyboard extends JPanel {

	/**The keys on the keyboard*/
	private static final String[][] keys = new String[][]{{"q", "w", "e", "r", "t", "y", "u", "i", "o", "p"},
															{"a", "s", "d", "f", "g", "h", "j", "k", "l"},
															{"z", "x", "c", "v", "b", "n", "m"}};
	/**The keys on the numpad*/
	private static final String[][] nums = new String[][]{{"1", "2", "3"},{"4", "5", "6"}, {"7", "8", "9"}};
	
	/**The size of an individual key*/
	public static Dimension KEY_SIZE = new Dimension(64, 64);
	
	/**
	 * When you launch this class seperately you launch a test version
	 * @param args
	 */
	public static void main(String[] args) {
		SystemHelper.setSystemDefaultLF();
		JFrame frame = new JFrame();
		frame.add(new OnScreenKeyboard());
		frame.pack();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
	}
	
	/**
	 * Creates a new OnScreenKeyboard Panel
	 */
	public OnScreenKeyboard() {
		makeGUI();
	}
	
	/**
	 * Populates this panel
	 */
	private void makeGUI(){
		setLayout(new BorderLayout());
		
		//panel that holds the letter keys
		JPanel letterPanel = new JPanel();
		add(letterPanel, BorderLayout.WEST);
		letterPanel.setLayout(new GridLayout(keys.length, 1));
		
		for(String[] row : keys){
			JPanel rowPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 0, 0));
			letterPanel.add(rowPanel);
			for(String key : row){
				rowPanel.add(getButtonForKey(key));
			}
		}
		
		JPanel numPanel = new JPanel();
		add(numPanel, BorderLayout.EAST);
		numPanel.setLayout(new BorderLayout());
		JPanel numPad = new JPanel(new GridLayout(nums.length, 1));
		
		for(String[] row : nums){
			JPanel rowPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 0, 0));
			numPad.add(rowPanel);
			for(String key : row){
				rowPanel.add(getButtonForKey(key));
			}
		}
	}
	
	/**
	 * Returns a new JButton completely setup
	 * @param key
	 * @return
	 */
	private JButton getButtonForKey(String key){
		JButton button = new JButton(key.toUpperCase());
		button.setFocusable(false);
		button.setFocusPainted(false);
		button.setSize(KEY_SIZE);
		button.setPreferredSize(KEY_SIZE);
		button.setMinimumSize(KEY_SIZE);
		button.setMaximumSize(KEY_SIZE);
		return button;
	}

}
